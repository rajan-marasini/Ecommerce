// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String   @unique
  password  String
  image     String?
  phone     String?
  address   String?
  role      String   @default("User")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  product Product[]
  review  Review[]
  Order   Order[]
}

model Category {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  category String @unique

  product Product[]
}

model Order {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  userId         String   @db.ObjectId
  amount         Float
  currency       String?  @default("usd")
  status         String?
  deliveryStatus String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  user     User     @relation(fields: [userId], references: [id])
  products String[] @db.ObjectId
}

type Image {
  color     String
  colorCode String
  image     String
}

model Product {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  price       Float
  brand       String
  inStock     Boolean
  images      Image[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  userId       String? @db.ObjectId
  categoryName String

  user     User?    @relation(fields: [userId], references: [id])
  category Category @relation(fields: [categoryName], references: [category])

  review Review[]
}

model Review {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  comment   String
  rating    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user      User?    @relation(fields: [userId], references: [id])
  userId    String?  @db.ObjectId
  product   Product? @relation(fields: [productId], references: [id])
  productId String?  @db.ObjectId
}
